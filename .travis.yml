# This is autogen file by tools/travis_yml_generator.py
# Do not change it manualy because after a next `git push` command this file
#   will be regenerated.
#

language: cpp
os: linux
dist: focal
compiler: gcc

before_install:
  - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
install: 
  - sudo apt-get install -qq g++-10
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 90 --slave /usr/bin/g++ g++ /usr/bin/g++-10

before_script:
- sudo apt-get install libboost-test-dev -y
- echo "deb http://archive.ubuntu.com/ubuntu xenial main universe" | sudo tee -a /etc/apt/sources.list
- sudo apt-get update -qq
- mkdir /tmp/gtest-src /tmp/gtest-build /tmp/gtest-install
- git clone https://github.com/google/googletest /tmp/gtest-src
- pushd /tmp/gtest-build && cmake -DCMAKE_INSTALL_PREFIX:PATH=/tmp/gtest-install /tmp/gtest-src && cmake --build . && cmake --build . --target install && popd

jobs:
  include:
    - stage: Build && Test && Package
      script: mkdir -p 'hw1.1-CI_CD_helloworld/build'pushd 'hw1.1-CI_CD_helloworld/build' && cmake -DGTEST_ROOT=/tmp/gtest-install .. && cmake --build . && cmake --build . --target test && cmake --build . --target package && popd
    - script: mkdir -p 'hw1.2-ip_filter/build'pushd 'hw1.2-ip_filter/build' && cmake -DGTEST_ROOT=/tmp/gtest-install .. && cmake --build . && cmake --build . --target test && cmake --build . --target package && popd

deploy:
  provider: script
  skip_cleanup: true
  script:
  - pushd 'hw1.1-CI_CD_helloworld/build' && export PROJ_VERSION=`grep --color=never -w 'CMAKE_PROJECT_VERSION:STATIC' CMakeCache.txt | cut -d= -f2` && export PROJ_DEB=`ls --color=never *.deb` && export PROJ_NAME=CI_CD_helloworld && curl -T ${PROJ_DEB} -u kadze009:${BINTRAY_API_KEY} "https://api.bintray.com/content/kadze009/otus-cpp/${PROJ_NAME}/${PROJ_VERSION}/${PROJ_DEB};deb_distribution=trusty;deb_component=main;deb_architecture=amd64;publish=1" && popd
  - pushd 'hw1.2-ip_filter/build' && export PROJ_VERSION=`grep --color=never -w 'CMAKE_PROJECT_VERSION:STATIC' CMakeCache.txt | cut -d= -f2` && export PROJ_DEB=`ls --color=never *.deb` && export PROJ_NAME=ip_filter && curl -T ${PROJ_DEB} -u kadze009:${BINTRAY_API_KEY} "https://api.bintray.com/content/kadze009/otus-cpp/${PROJ_NAME}/${PROJ_VERSION}/${PROJ_DEB};deb_distribution=trusty;deb_component=main;deb_architecture=amd64;publish=1" && popd

